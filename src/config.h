#ifndef __CONFIG_H__
#define __CONFIG_H__

#include <gtk/gtk.h>
#include "action.h"

enum ConfigSequenceType {
  SEQ_OPT,
  SEQ_CON,
  SEQ_REQ,
  SEQ_END
};

typedef gboolean (*parse_func) ( GScanner *, void * );

GtkWidget *config_parse ( gchar *, gboolean );
void config_pipe_read ( gchar *command );
void config_string ( gchar *string );
gboolean config_expect_token ( GScanner *scan, gint token, gchar *fmt, ...);
void config_optional_semicolon ( GScanner *scanner );
void config_parse_sequence ( GScanner *scanner, ... );
gboolean config_assign_boolean (GScanner *scanner, gboolean def, gchar *expr);
gchar *config_assign_string ( GScanner *scanner, gchar *expr );
gdouble config_assign_number ( GScanner *scanner, gchar *expr );
gint config_assign_tokens ( GScanner *scanner, gchar *, gchar *, ... );
action_t *config_action ( GScanner *scanner );
gchar *config_get_value ( GScanner *, gchar *, gboolean, gchar **);
void config_scanner ( GScanner *scanner );
void config_layout ( GScanner *, GtkWidget **, gboolean );
void config_switcher ( GScanner *scanner );
void config_placer ( GScanner *scanner );
GtkWidget *config_parse_toplevel ( GScanner *scanner, gboolean toplevel );

enum {
  G_TOKEN_SCANNER = G_TOKEN_LAST + 50,
  G_TOKEN_LAYOUT = G_TOKEN_LAST + 51,
  G_TOKEN_PLACER = G_TOKEN_LAST + 52,
  G_TOKEN_SWITCHER = G_TOKEN_LAST + 53,
  G_TOKEN_DEFINE = G_TOKEN_LAST + 54,
  G_TOKEN_TRIGGERACTION = G_TOKEN_LAST + 55,
  G_TOKEN_MAPAPPID = G_TOKEN_LAST + 56,
  G_TOKEN_MODULE = G_TOKEN_LAST + 57,
  G_TOKEN_END = G_TOKEN_LAST + 59,
  G_TOKEN_FILE = G_TOKEN_LAST + 61,
  G_TOKEN_EXEC = G_TOKEN_LAST + 62,
  G_TOKEN_MPDCLIENT = G_TOKEN_LAST + 63,
  G_TOKEN_SWAYCLIENT = G_TOKEN_LAST + 64,
  G_TOKEN_EXECCLIENT = G_TOKEN_LAST + 65,
  G_TOKEN_SOCKETCLIENT = G_TOKEN_LAST +66,
  G_TOKEN_NUMBERW  = G_TOKEN_LAST + 71,
  G_TOKEN_STRINGW  = G_TOKEN_LAST + 72,
  G_TOKEN_NOGLOB = G_TOKEN_LAST + 80,
  G_TOKEN_CHTIME = G_TOKEN_LAST + 82,
  G_TOKEN_SUM = G_TOKEN_LAST + 90,
  G_TOKEN_PRODUCT = G_TOKEN_LAST + 91,
  G_TOKEN_LASTW = G_TOKEN_LAST + 92,
  G_TOKEN_FIRST = G_TOKEN_LAST + 93,
  G_TOKEN_GRID = G_TOKEN_LAST + 100,
  G_TOKEN_SCALE = G_TOKEN_LAST + 101,
  G_TOKEN_LABEL = G_TOKEN_LAST + 102,
  G_TOKEN_BUTTON = G_TOKEN_LAST + 103,
  G_TOKEN_IMAGE = G_TOKEN_LAST + 104,
  G_TOKEN_CHART = G_TOKEN_LAST + 105,
  G_TOKEN_INCLUDE = G_TOKEN_LAST + 106,
  G_TOKEN_TASKBAR = G_TOKEN_LAST + 107,
  G_TOKEN_PAGER = G_TOKEN_LAST + 108,
  G_TOKEN_TRAY = G_TOKEN_LAST + 109,
  G_TOKEN_STYLE = G_TOKEN_LAST + 110,
  G_TOKEN_CSS = G_TOKEN_LAST + 111,
  G_TOKEN_INTERVAL = G_TOKEN_LAST + 112,
  G_TOKEN_VALUE = G_TOKEN_LAST + 113,
  G_TOKEN_PINS = G_TOKEN_LAST + 114,
  G_TOKEN_PREVIEW = G_TOKEN_LAST + 115,
  G_TOKEN_COLS = G_TOKEN_LAST + 116,
  G_TOKEN_ROWS = G_TOKEN_LAST + 117,
  G_TOKEN_ACTION = G_TOKEN_LAST + 118,
  G_TOKEN_DISPLAY = G_TOKEN_LAST + 119,
  G_TOKEN_ICONS = G_TOKEN_LAST + 120,
  G_TOKEN_LABELS = G_TOKEN_LAST + 121,
  G_TOKEN_LOC = G_TOKEN_LAST + 123,
  G_TOKEN_NUMERIC = G_TOKEN_LAST + 124,
  G_TOKEN_PEROUTPUT = G_TOKEN_LAST + 125,
  G_TOKEN_TITLEWIDTH = G_TOKEN_LAST + 126,
  G_TOKEN_TOOLTIP = G_TOKEN_LAST + 127,
  G_TOKEN_TRIGGER = G_TOKEN_LAST + 128,
  G_TOKEN_GROUP = G_TOKEN_LAST + 129,
  G_TOKEN_XSTEP = G_TOKEN_LAST + 130,
  G_TOKEN_YSTEP = G_TOKEN_LAST + 131,
  G_TOKEN_XORIGIN = G_TOKEN_LAST + 132,
  G_TOKEN_YORIGIN = G_TOKEN_LAST + 133,
  G_TOKEN_CHILDREN = G_TOKEN_LAST + 134,
  G_TOKEN_SORT = G_TOKEN_LAST + 135,
  G_TOKEN_FILTER = G_TOKEN_LAST + 136,
  G_TOKEN_PRIMARY = G_TOKEN_LAST + 137,
  G_TOKEN_TRUE = G_TOKEN_LAST + 138,
  G_TOKEN_FALSE = G_TOKEN_LAST + 139,
  G_TOKEN_MENU = G_TOKEN_LAST + 140,
  G_TOKEN_MENUCLEAR = G_TOKEN_LAST + 141,
  G_TOKEN_PIPEREAD = G_TOKEN_LAST + 142,
  G_TOKEN_CONFIG = G_TOKEN_LAST + 143,
  G_TOKEN_SWAYCMD = G_TOKEN_LAST + 144,
  G_TOKEN_SWAYWIN = G_TOKEN_LAST + 145,
  G_TOKEN_MPDCMD = G_TOKEN_LAST + 146,
  G_TOKEN_SETMONITOR = G_TOKEN_LAST + 147,
  G_TOKEN_SETLAYER = G_TOKEN_LAST + 148,
  G_TOKEN_SETBARSIZE = G_TOKEN_LAST + 149,
  G_TOKEN_SETBARID = G_TOKEN_LAST + 150,
  G_TOKEN_SETVALUE = G_TOKEN_LAST + 151,
  G_TOKEN_SETSTYLE = G_TOKEN_LAST + 152,
  G_TOKEN_SETTOOLTIP = G_TOKEN_LAST + 153,
  G_TOKEN_IDLEINHIBIT = G_TOKEN_LAST + 154,
  G_TOKEN_FUNCTION = G_TOKEN_LAST + 155,
  G_TOKEN_MAXIMIZE = G_TOKEN_LAST + 156,
  G_TOKEN_MINIMIZE = G_TOKEN_LAST + 157,
  G_TOKEN_UNMAXIMIZE = G_TOKEN_LAST + 158,
  G_TOKEN_UNMINIMIZE = G_TOKEN_LAST + 159,
  G_TOKEN_FOCUS = G_TOKEN_LAST + 160,
  G_TOKEN_CLOSE = G_TOKEN_LAST + 161,
  G_TOKEN_SETEXCLUSIVEZONE = G_TOKEN_LAST + 162,
  G_TOKEN_USERSTATE = G_TOKEN_LAST + 163,
  G_TOKEN_USERSTATE2 = G_TOKEN_LAST + 164,
  G_TOKEN_CLIENTSEND = G_TOKEN_LAST + 165,
  G_TOKEN_ITEM = G_TOKEN_LAST + 170,
  G_TOKEN_SEPARATOR = G_TOKEN_LAST + 171,
  G_TOKEN_SUBMENU = G_TOKEN_LAST + 172,
  G_TOKEN_MAXIMIZED = G_TOKEN_LAST + 180,
  G_TOKEN_MINIMIZED = G_TOKEN_LAST + 181,
  G_TOKEN_FULLSCREEN = G_TOKEN_LAST + 182,
  G_TOKEN_FOCUSED = G_TOKEN_LAST + 183,
  G_TOKEN_REGEX = G_TOKEN_LAST + 200,
  G_TOKEN_JSON = G_TOKEN_LAST + 201,
  G_TOKEN_GRAB = G_TOKEN_LAST + 202,
  G_TOKEN_TITLE = G_TOKEN_LAST + 210,
  G_TOKEN_APPID = G_TOKEN_LAST + 211,
  G_TOKEN_WORKSPACE = G_TOKEN_LAST + 212,
  G_TOKEN_OUTPUT = G_TOKEN_LAST + 213,
  G_TOKEN_FLOATING = G_TOKEN_LAST + 214
};

#endif
